---
- name: Update apt cache
  apt: update-cache=yes cache_valid_time=86400

- name: Update all packages
  apt: upgrade=dist

- name: Install packages
  apt: pkg={{ item }} state=latest
  with_items:
    - git
    - zip
    - unzip
    - curl
    - wget
    - build-essential
    - python-pip
    - python-dev
    - python3-pip
    - python3-dev
#    - libzmq3 #<- Issues on Ubuntu 16.04
#    - libzmq3-dev
    - zeromq #<-- Replacing the above two packages with Ubuntu 16.04 version
    - python-matplotlib
    - python-numpy
    - python-scipy
    - python-pandas
    - python3-matplotlib
    - python3-numpy
    - python3-scipy
    - python3-pandas
    - python-nose
    - g++
    - libopenblas-dev
    - "{{ java_version }}"
    - libjansi-java
#  ignore_errors: yes


- name: Install additional Python 2 libraries
  pip: name={{ item }}
  with_items:
    - scikit-learn
    - spark-sklearn
    - Theano
    - pymc
    - pydot
    - uwsgi
    - freetype-py
    - pillow
    - python-dateutil
    - pytz
    - six
    - pygments
    - readline
    - pexpect
    - cython
    - networkx
    - numexpr
    - tables
    - patsy
    - statsmodels
    - sympy
    - keras
    - xlrd
    - xlwt
  ignore_errors: yes

- name: Install Tensorflow for Python2
  become: yes
  become_user: "{{ cluster_user }}"
  command: sudo pip2 install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-{{ tflow_version }}-cp27-none-linux_x86_64.whl

- name: Set JAVA_HOME in .bashrc
  lineinfile:
    dest: '/home/{{ cluster_user }}/.bashrc'
    line: 'export JAVA_HOME={{ java_home }}'
    regexp: '^(# *)?export JAVA_HOME='
  become: yes
  become_user: "{{ cluster_user }}"

- name: Add sbt source
  shell: echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list

- name: Add keyserver
  apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=642AC823

- name: Install sbt
  apt: name=sbt update_cache=yes

# The following is used to downlaod scala from every host as a opposed to a one time download
#- name: Download Scala
#  get_url: url=http://downloads.typesafe.com/scala/{{ scala_version }}/scala-{{ scala_version }}.deb?_ga=1.129140876.1867818617.1456337141 dest=/tmp

- name: Install Scala
  #apt: deb="/tmp/scala-{{ scala_version }}.deb" #install scala if not using one time download
  apt: deb="/home/{{ cluster_user }}/scala-{{ scala_version }}.deb"

# The following is used to downlaod maven from every host as a opposed to a one time download
#- name: Download apcahe maven
#  get_url: url=http://mirror.nbtelecom.com.br/apache/maven/maven-3/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz dest=/tmp

- name: Extract maven
  #unarchive: copy=no creates=/opt/apache-maven-{{ maven_version }} dest=/opt src=/tmp/apache-maven-{{ maven_version }}-bin.tar.gz owner={{ cluster_user }} group={{ cluster_user }} mode=0755 #use if not using one time download
  unarchive: copy=yes creates=/opt/apache-maven-{{ maven_version }} dest=/opt src=apps/apache-maven-{{ maven_version }}-bin.tar.gz owner={{ cluster_user }} group={{ cluster_user }} mode=0755
  #command: tar xvfz /home/{{ cluster_user }}/apache-maven-{{ maven_version }}-bin.tar.gz -C /opt #manual extract 

# The following is only used if the tar command is used as opposed to unarchive with "copy: yes"
#- name: Set permissions on maven
#  file: path=/opt/apache-maven-{{ maven_version }} state=directory owner={{ cluster_user }} group={{ cluster_user }}

- name: Set M2_HOME in .bashrc
  lineinfile:
    dest: /home/{{ cluster_user }}/.bashrc
    line: 'export M2_HOME=/opt/apache-maven-{{ maven_version }}'
    regexp: 'export M2_HOME=/opt/apache-maven-{{ maven_version }}.*'
  become: yes
  become_user: "{{ cluster_user }}"

- name: Add maven to .bashrc
  lineinfile:
    dest: /home/{{ cluster_user }}/.bashrc
    line: 'export PATH=/opt/apache-maven-{{ maven_version }}/bin:$PATH'
    regexp: 'export PATH=/opt/apache-maven-{{ maven_version }}.*'
  become: yes
  become_user: "{{ cluster_user }}"
